{
    "title": "Контрольный тест по теме: автоматизация управления сетью",
    "materialType": "test",
    "description": "Проверьте свои знания по теме \"Автоматизация управления сетью\"",
    "difficulty": 1,
    "duration": "PT0H20M",
    "tags": {
        "$ref": "../../material-tags.json"
    },
    "skills": {},
    "passingScore": 100,
    "assets": {
        "$ref": "./assets"
    },
    "questions": [
        {
            "question": "Что такое JSON?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Это база данных",
                    "correct": false,
                    "comment": "Тема 14.2.0 — JavaScript Object Notation (JSON) — это формат данных, используемый приложениями для хранения и транспортировки."
                },
                {
                    "answer": "Это язык скриптов",
                    "correct": false,
                    "comment": "Тема 14.2.0 — JavaScript Object Notation (JSON) — это формат данных, используемый приложениями для хранения и транспортировки."
                },
                {
                    "answer": "Это формат данных для хранения и транспортировки",
                    "correct": true
                },
                {
                    "answer": "Это скомпилированный язык программирования",
                    "correct": false,
                    "comment": "Тема 14.2.0 — JavaScript Object Notation (JSON) — это формат данных, используемый приложениями для хранения и транспортировки."
                }
            ]
        },
        {
            "question": "Какому архитектурному ограничению должен соответствовать настоящий веб-сервис API RESTful?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Должен поддерживать формат данных XML.",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Соответствие ограничениям архитектуры REST обычно называется «RESTful». API можно считать «RESTful», если он имеет следующие характеристики:\n\n- Архитектура Клиент-Сервер — клиент обрабатывает внешний интерфейс, а сервер — внутренний;\n\n- Без сохранения состояния — никакие клиентские данные не сохраняются на сервере между запросами. Состояние сеанса сохраняется на клиенте;\n\n- Кэшируемый — клиенты могут кэшировать ответы локально для повышения производительности."
                },
                {
                    "answer": "Должен иметь архитектуру клиент-сервер",
                    "correct": true
                },
                {
                    "answer": "Должен работать как облачный сервис.",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Соответствие ограничениям архитектуры REST обычно называется «RESTful». API можно считать «RESTful», если он имеет следующие характеристики:\n\n- Архитектура Клиент-Сервер — клиент обрабатывает внешний интерфейс, а сервер — внутренний;\n\n- Без сохранения состояния — никакие клиентские данные не сохраняются на сервере между запросами. Состояние сеанса сохраняется на клиенте;\n\n- Кэшируемый — клиенты могут кэшировать ответы локально для повышения производительности."
                },
                {
                    "answer": "Должен использовать HTTPS для передачи данных.",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Соответствие ограничениям архитектуры REST обычно называется «RESTful». API можно считать «RESTful», если он имеет следующие характеристики:\n\n- Архитектура Клиент-Сервер — клиент обрабатывает внешний интерфейс, а сервер — внутренний;\n\n- Без сохранения состояния — никакие клиентские данные не сохраняются на сервере между запросами. Состояние сеанса сохраняется на клиенте;\n\n- Кэшируемый — клиенты могут кэшировать ответы локально для повышения производительности."
                }
            ]
        },
        {
            "question": "В примере запроса RESTful API: **http://www.mapquestapi.com/directions/v2/route?outFormat=json&key=KEY&from=San+Jose,Ca&to=Monterey,Ca**, какой термин описывает компонент **directions/v2/route**?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Запрос",
                    "correct": false,
                    "comment": "Тема 14.4.0 — В этом примере запроса API различные компоненты:\n\n- Сервер API – сервер API MapQuest, http://www.mapquestapi.com\n\n- Ресурсы — API маршрутов MapQuest, direction/v2/route\n\n- Запрос — формат данных и информация, которую клиент запрашивает у службы API, включая следующее:\n\n  + Формат – запрашивается формат JSON\n\n  + Ключ — ключ аутентификации, здесь это KEY\n\n  + Параметры — информация, относящаяся к запросу, в данном примере 'from=San+Jose,Ca' и 'to=Monterey,Ca'"
                },
                {
                    "answer": "Параметры",
                    "correct": false,
                    "comment": "Тема 14.4.0 — В этом примере запроса API различные компоненты:\n\n- Сервер API – сервер API MapQuest, http://www.mapquestapi.com\n\n- Ресурсы — API маршрутов MapQuest, direction/v2/route\n\n- Запрос — формат данных и информация, которую клиент запрашивает у службы API, включая следующее:\n\n  + Формат – запрашивается формат JSON\n\n  + Ключ — ключ аутентификации, здесь это KEY\n\n  + Параметры — информация, относящаяся к запросу, в данном примере 'from=San+Jose,Ca' и 'to=Monterey,Ca'"
                },
                {
                    "answer": "Ресурсы",
                    "correct": true
                },
                {
                    "answer": "API сервер",
                    "correct": false,
                    "comment": "Тема 14.4.0 — В этом примере запроса API различные компоненты:\n\n- Сервер API – сервер API MapQuest, http://www.mapquestapi.com\n\n- Ресурсы — API маршрутов MapQuest, direction/v2/route\n\n- Запрос — формат данных и информация, которую клиент запрашивает у службы API, включая следующее:\n\n  + Формат – запрашивается формат JSON\n\n  + Ключ — ключ аутентификации, здесь это KEY\n\n  + Параметры — информация, относящаяся к запросу, в данном примере 'from=San+Jose,Ca' и 'to=Monterey,Ca'"
                }
            ]
        },
        {
            "question": "Какое утверждение описывает API?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Это набор функций и процедур, который позволяет клиентскому приложению получать доступ к данным приложения-службы.",
                    "correct": true
                },
                {
                    "answer": "Это язык программирования для создания веб-приложений.",
                    "correct": false,
                    "comment": "Тема 14.3.0 — Интерфейс прикладного программирования (API) — это набор функций и процедур, обеспечивающих взаимодействие между приложениями. Как правило, приложение-служба предоставляет API, чтобы позволить клиентским приложениям получать доступ к данным приложения-службы."
                },
                {
                    "answer": "Это набор функций и подпрограмм, которые будут использоваться в комплексном приложении.",
                    "correct": false,
                    "comment": "Тема 14.3.0 — Интерфейс прикладного программирования (API) — это набор функций и процедур, обеспечивающих взаимодействие между приложениями. Как правило, приложение-служба предоставляет API, чтобы позволить клиентским приложениям получать доступ к данным приложения-службы."
                },
                {
                    "answer": "Это набор правил, которые фильтруют сетевой трафик для веб-приложений.",
                    "correct": false,
                    "comment": "Тема 14.3.0 — Интерфейс прикладного программирования (API) — это набор функций и процедур, обеспечивающих взаимодействие между приложениями. Как правило, приложение-служба предоставляет API, чтобы позволить клиентским приложениям получать доступ к данным приложения-службы."
                }
            ]
        },
        {
            "question": "Какой термин описывает процесс управления изменениями конфигурации сетевых устройств упорядоченным образом?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Выделение ресурсов",
                    "correct": false,
                    "comment": "Темы 14.5.0 — Инструменты управления конфигурацией обычно включают в себя автоматизацию и оркестрацию. Автоматизация — это когда инструмент автоматически выполняет задачу в системе. Оркестрация — это организация ряда автоматизированных задач, которые приводят к координированию рабочего процесса."
                },
                {
                    "answer": "⁪Оркестрация",
                    "correct": true
                },
                {
                    "answer": "Автоматизация",
                    "correct": false,
                    "comment": "Темы 14.5.0 — Инструменты управления конфигурацией обычно включают в себя автоматизацию и оркестрацию. Автоматизация — это когда инструмент автоматически выполняет задачу в системе. Оркестрация — это организация ряда автоматизированных задач, которые приводят к координированию рабочего процесса."
                },
                {
                    "answer": "Управление версиями",
                    "correct": false,
                    "comment": "Темы 14.5.0 — Инструменты управления конфигурацией обычно включают в себя автоматизацию и оркестрацию. Автоматизация — это когда инструмент автоматически выполняет задачу в системе. Оркестрация — это организация ряда автоматизированных задач, которые приводят к координированию рабочего процесса."
                }
            ]
        },
        {
            "question": "Какой API веб-службы может использовать несколько форматов данных, включая JSON, XML и YAML?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "REST",
                    "correct": true
                },
                {
                    "answer": "XML-RPC",
                    "correct": false,
                    "comment": "Тема 14.3.0 — REST API может использовать несколько форматов данных, включая JSON, XML, YAML и другие. И SOAP, и XML-RPC используют формат XML. JSON-RPC использует формат JSON."
                },
                {
                    "answer": "JSON-RPC",
                    "correct": false,
                    "comment": "Тема 14.3.0 — REST API может использовать несколько форматов данных, включая JSON, XML, YAML и другие. И SOAP, и XML-RPC используют формат XML. JSON-RPC использует формат JSON."
                },
                {
                    "answer": "SOAP",
                    "correct": false,
                    "comment": "Тема 14.3.0 — REST API может использовать несколько форматов данных, включая JSON, XML, YAML и другие. И SOAP, и XML-RPC используют формат XML. JSON-RPC использует формат JSON."
                }
            ]
        },
        {
            "question": "По каким причинам большинству API RESTful требуется ключ в запросе? (Выберите два варианта.)",
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "Чтобы зашифровать сообщение в API запросе",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Многие API-интерфейсы RESTful, включая общедоступные API, требуют ключа. Причины, по которым провайдеру API может потребоваться ключ:\n\n- для аутентификации источника, чтобы убедиться, что он авторизован для использования API\n\n- ограничить количество людей, использующих API\n\n- для лучшего сбора и отслеживания данных, запрашиваемых пользователями\n\n- для сбора информации о людях, использующих API"
                },
                {
                    "answer": "Для указания формата данных, ожидаемых в ответе",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Многие API-интерфейсы RESTful, включая общедоступные API, требуют ключа. Причины, по которым провайдеру API может потребоваться ключ, включают следующее:\n\n- для аутентификации источника, чтобы убедиться, что он авторизован для использования API\n\n- ограничить количество людей, использующих API\n\n- для лучшего сбора и отслеживания данных, запрашиваемых пользователями\n\n- для сбора информации о людях, использующих API"
                },
                {
                    "answer": "Чтобы убедиться, что запрос соответствует сервису, который предлагается веб-приложением",
                    "correct": false,
                    "comment": "Тема 14.4.0 — Многие API-интерфейсы RESTful, включая общедоступные API, требуют ключа. Причины, по которым провайдеру API может потребоваться ключ, включают следующее:\n\n- для аутентификации источника, чтобы убедиться, что он авторизован для использования API\n\n- ограничить количество людей, использующих API\n\n- для лучшего сбора и отслеживания данных, запрашиваемых пользователями\n\n- для сбора информации о людях, использующих API"
                },
                {
                    "answer": "Для сбора информации о людях, использующих API",
                    "correct": true
                },
                {
                    "answer": "Чтобы аутентифицировать запрашивающий источник",
                    "correct": true
                }
            ]
        },
        {
            "question": "В чем разница между форматами данных XML и HTML?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "XML заключает данные в пару тегов, а HTML использует пару кавычек для включения данных.",
                    "correct": false,
                    "comment": "Тема 14.2.0 — XML — тип читаемого человеком формата данных, который используется для хранения, передачи и чтения данных приложениями. Как и HTML, XML использует связанный набор тегов для включения данных. В отличие от HTML, XML не использует предопределенные теги или стандартную структуру документа, а использует самоописательные теги и структуру."
                },
                {
                    "answer": "XML требует отступов для каждой пары ключ/значение, а HTML — нет.",
                    "correct": false,
                    "comment": "Тема 14.2.0 — XML — тип читаемого человеком формата данных, который используется для хранения, передачи и чтения данных приложениями. Как и HTML, XML использует связанный набор тегов для включения данных. В отличие от HTML, XML не использует предопределенные теги или стандартную структуру документа, а использует самоописательные теги и структуру."
                },
                {
                    "answer": "XML использует самоописательную структуру данных, а HTML использует стандартную структуру документа.",
                    "correct": true
                },
                {
                    "answer": "XML форматирует данные в шестнадцатеричном формате, тогда как HTML форматирует данные в двоичном.",
                    "correct": false,
                    "comment": "Тема 14.2.0 — XML — тип читаемого человеком формата данных, который используется для хранения, передачи и чтения данных приложениями. Как и HTML, XML использует связанный набор тегов для включения данных. В отличие от HTML, XML не использует предопределенные теги или стандартную структуру документа, а использует самоописательные теги и структуру."
                }
            ]
        },
        {
            "question": "Программист использует Ansible в качестве инструмента управления конфигурацией. Какой термин используется для описания набора инструкций для исполнения?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "playbook",
                    "correct": true
                },
                {
                    "answer": "cookbook",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible использует название книги сценариев (Playbook) для описания набора инструкций, которые должны быть выполнены."
                },
                {
                    "answer": "pillar",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible использует название книги сценариев (Playbook) для описания набора инструкций, которые должны быть выполнены."
                },
                {
                    "answer": "manifest",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible использует название книги сценариев (Playbook) для описания набора инструкций, которые должны быть выполнены."
                }
            ]
        },
        {
            "question": "Какой термин используется для описания набора инструкций для выполнения инструментом управления конфигурацией Chef?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "playbook",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Инструмент управления конфигурацией Chef использует название книги рецептов (Cookbook) для описания набора инструкций, которые должны быть выполнены."
                },
                {
                    "answer": "cookbook",
                    "correct": true
                },
                {
                    "answer": "manifest",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Инструмент управления конфигурацией Chef использует название книги рецептов (Cookbook) для описания набора инструкций, которые должны быть выполнены."
                },
                {
                    "answer": "pillar",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Инструмент управления конфигурацией Chef использует название книги рецептов (Cookbook) для описания набора инструкций, которые должны быть выполнены."
                }
            ]
        },
        {
            "question": "Какие два инструмента управления конфигурацией разработаны с использованием Python? (Выберите два варианта.)",
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "Chef",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible и SaltStack — инструменты управления конфигурацией, разработанные с использованием Python. Chef и Puppet — инструменты управления конфигурацией, разработанные с использованием Ruby. Ruby считается более сложным языком для изучения, чем Python. NETCONF — это протокол управления сетью."
                },
                {
                    "answer": "Puppet",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible и SaltStack — инструменты управления конфигурацией, разработанные с использованием Python. Chef и Puppet — инструменты управления конфигурацией, разработанные с использованием Ruby. Ruby считается более сложным языком для изучения, чем Python. NETCONF — это протокол управления сетью."
                },
                {
                    "answer": "Ansible",
                    "correct": true
                },
                {
                    "answer": "Saltstack",
                    "correct": true
                },
                {
                    "answer": "NETCONF",
                    "correct": false,
                    "comment": "Тема 14.5.0 — Ansible и SaltStack — инструменты управления конфигурацией, разработанные с использованием Python. Chef и Puppet — инструменты управления конфигурацией, разработанные с использованием Ruby. Ruby считается более сложным языком для изучения, чем Python. NETCONF — это протокол управления сетью."
                }
            ]
        },
        {
            "question": "Какая функция сетевой системы Cisco, основанной на IBNS, позволяет сетевым операторам выражать ожидаемое сетевое поведение, которое лучше всего соответствует бизнес-целям?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Активация",
                    "correct": false,
                    "comment": "Тема 14.6.0 — Функция преобразования Cisco IBNS позволяет сетевому администратору выразить ожидаемое сетевое поведение, которое лучше всего соответствует бизнес-целям."
                },
                {
                    "answer": "Анализ ACL",
                    "correct": false,
                    "comment": "Тема 14.6.0 — Функция преобразования Cisco IBNS позволяет сетевому администратору выразить ожидаемое сетевое поведение, которое лучше всего соответствует бизнес-целям."
                },
                {
                    "answer": "Контроль",
                    "correct": false,
                    "comment": "Тема 14.6.0 — Функция преобразования Cisco IBNS позволяет сетевому администратору выразить ожидаемое сетевое поведение, которое лучше всего соответствует бизнес-целям."
                },
                {
                    "answer": "Преобразование",
                    "correct": true
                }
            ]
        },
        {
            "question": "Какие типы API подходят для обмена данными между туристическим веб-сайтом, запрашивающим данные о наличии номеров, и сетью отелей?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Открытые API",
                    "correct": false,
                    "comment": "Тема 14.3.0 — API приложений подразделяются на следующие категории:\n\n- Открытые или публичные API — общедоступны и могут использоваться без ограничений\n\n- Внутренние или частные API — используются организацией или компанией для доступа к данным и услугам только для внутреннего использования.\n\n- Партнерские API — используются между компанией и ее деловыми партнерами или подрядчиками для облегчения бизнеса между ними."
                },
                {
                    "answer": "Партнерские API",
                    "correct": true
                },
                {
                    "answer": "Публичные API",
                    "correct": false,
                    "comment": "Тема 14.3.0 — API приложений подразделяются на следующие категории:\n\n- Открытые или публичные API — общедоступны и могут использоваться без ограничений\n\n- Внутренние или частные API — используются организацией или компанией для доступа к данным и услугам только для внутреннего использования.\n\n- Партнерские API — используются между компанией и ее деловыми партнерами или подрядчиками для облегчения бизнеса между ними."
                },
                {
                    "answer": "Внутренние API",
                    "correct": false,
                    "comment": "Тема 14.3.0 — API приложений подразделяются на следующие категории:\n\n- Открытые или публичные API — общедоступны и могут использоваться без ограничений\n\n- Внутренние или частные API — используются организацией или компанией для доступа к данным и услугам только для внутреннего использования.\n\n- Партнерские API — используются между компанией и ее деловыми партнерами или подрядчиками для облегчения бизнеса между ними."
                }
            ]
        },
        {
            "question": "Какие символы используются для определения ключа JSON?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Двоеточия",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Ключи JSON находятся слева от двоеточия. Они должны быть заключены в двойные кавычки, как в «ключе», и могут быть любой допустимой строкой."
                },
                {
                    "answer": "Квадратные скобки",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Ключи JSON находятся слева от двоеточия. Они должны быть заключены в двойные кавычки, как в «ключе», и могут быть любой допустимой строкой."
                },
                {
                    "answer": "Запятые",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Ключи JSON находятся слева от двоеточия. Они должны быть заключены в двойные кавычки, как в «ключе», и могут быть любой допустимой строкой."
                },
                {
                    "answer": "Кавычки",
                    "correct": true
                }
            ]
        },
        {
            "question": "Какой символ используется для разделения пар ключ/значение JSON?",
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "; (точка с запятой)",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Каждая пара ключ/значение в серии пар ключ/значение разделена запятой, поэтому середина JSON выглядит следующим образом: «ключ»: «значение», «ключ»: «значение»."
                },
                {
                    "answer": ", (запятая)",
                    "correct": true
                },
                {
                    "answer": "— (тире)",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Каждая пара ключ/значение в серии пар ключ/значение разделена запятой, поэтому середина JSON выглядит следующим образом: «ключ»: «значение», «ключ»: «значение»."
                },
                {
                    "answer": "/ (косая черта)",
                    "correct": false,
                    "comment": "Тема 14.2.0 — Каждая пара ключ/значение в серии пар ключ/значение разделена запятой, поэтому середина JSON выглядит следующим образом: «ключ»: «значение», «ключ»: «значение»."
                }
            ]
        }
    ]
}